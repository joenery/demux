#!/bin/bash
#
#Generates the command line for Demultiplexing a run 
#using the given SampleSheet.csv
#
#It must be invoked in the run folder
#
#The fastqs will be written to a directory in the 
#OUTPUT_PARENT directory (found in demux-constants), 
#which is defined below. 
#It is assigned the directory name of the run folder 
#with a timestamp suffix.
#
#The nohup is redirected to a log file in the LOG_PARENT
#directory defined below and assigned a filename as 
#described previously.
#

source "/gale/netapp/home/seq/bin/demux/demux-constants"

timestamp="$(date "+%y%m%d%H%M%S")"
run_path="$(pwd)"
run_name="$(basename $run_path)"
run_name_ts="${run_name}_$timestamp"
#see demux-constants for OUTPUT_PARENT definition
#output_path="$OUTPUT_PARENT/$run_name_ts"
#interop_path="$OUTPUT_PARENT/InterOp"
log_name="$run_name_ts.txt"
log_path="$LOG_PARENT/$log_name"

##
## 210630
## added miseq specific output path
##
##
instrument=$(echo $run_name | cut -f2 -d_)
if [ "$instrument" = $MISEQ_STRING ] ; then
  flowcell="$(echo $run_name | awk -F- '{print $NF}')"
  output_path="$MISEQ_OUTPUT_PARENT/$run_name_ts"
  interop_path="$MISEQ_OUTPUT_PARENT/InterOp"
else
  flowcell="$(echo $run_name | awk -F_ '{print $NF}')"
  flowcell="$(echo ${flowcell:1})"
  output_path="$OUTPUT_PARENT/$run_name_ts"
  interop_path="$OUTPUT_PARENT/InterOp" 
fi

flowcell_ts="${flowcell}_$timestamp"

proc_threads=1
read_threads=1
write_threads=1

usage() {
echo "Usage: demux-commandline -s SampleSheet.csv"
echo "-s	samplesheet filename in default samplesheets directory: "
echo "	  /gale/netapp/seq2/illumina_runs/.samplesheets/<run folder>"
echo "-t        number of processing threads"
echo "-r        number of reading threads"
echo "-w        number of writing threads"
echo "-O	additional bcl2fastq options enclosed in quotes"
echo "-m	select cellranger mkfastq script. options:"
echo "            a: cellranger-atac"
echo "            c: cellranger"
echo "            d: cellranger-dna"
echo "            eg, \"-ma\" or \"-m a\" for cellranger-atac"
echo "-b  bcl2fastq for 10x. options:"
echo "            2: v2 kit"
echo "            3: v3 kit"

echo "-h	this help message"
}

while getopts ":s:t:r:w:O:m:b:h" opt; do
  case $opt in
    s) 
      samplesheet_arg=$OPTARG
      ;;
    t)
      proc_threads=$OPTARG
      ;;
    r)
      read_threads=$OPTARG
      ;;
    w)
      write_threads=$OPTARG
      ;;
    O)
      bclopts=$OPTARG
      ;;
    m)
      mkfastq=$OPTARG
      ;;
    b)
      bcl2fastq410x=$OPTARG
      case $bcl2fastq410x in
      1) basemask="Y28N*,I8N*,Y98N*" ;;
      2) basemask="Y26N*,I8N*,N*,Y98N*" ;;
      3) basemask="Y28N*,I8N*,N*,Y98N*" ;;
      4) basemask="Y28N*,I10N*,I10N*,Y98N*" ;;
      *)
        echo "Invalid option for -b: -$bcl2fastq410x"
        echo "Valid options are:"
        echo "2: v2 kit"
        echo "3: v3 kit"
        echo "4: TT kit"
        exit 1
        ;;
      esac
      ;;
    h) 
      usage
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      usage
      exit 1
      ;;
  esac
done

#check if it's a valid run directory
if [ ! -f "$run_path/$RUN_INFO" ]; then
  echo "This does not appear to be a valid run directory!"
  exit 1
fi

#if a sample sheet arg isn't given, try to find it using the default name
if [ -z $samplesheet_arg ]; then 
  samplesheet_path="$SAMPLESHEET_PARENT/$run_name/$DEFAULT_SAMPLESHEET_NAME"
  if [ ! -f $samplesheet_path ]; then
    samplesheet_path="$run_path/$DEFAULT_SAMPLESHEET_NAME"
    if [ ! -f $samplesheet_path ]; then
      echo "Error! Cannot find sample sheet."
      usage
      exit 1
    fi
  fi
#if a sample sheet arg is given, then try to find it
else
  if [ $(dirname $samplesheet_arg) == . ]; then 
    samplesheet_path="$(pwd)/$samplesheet_arg"
  else
    samplesheet_path="$samplesheet_arg"
  fi
  if [ ! -f $samplesheet_path ]; then
    samplesheet_path="$SAMPLESHEET_PARENT/$run_name/$samplesheet_arg"
    if [ ! -f $samplesheet_path ]; then
      samplesheet_path="$run_path/$samplesheet_arg"
      if [ ! -f $samplesheet_path ]; then
        echo "Error! Cannot find given sample sheet."
        usage
        exit 1
      fi
    fi
  fi
fi

#select mkfastq command
if [ ! -z ${mkfastq+x} ]; then
case $mkfastq in
  a)cellranger_version="cellranger-atac"
    ;;
  c)cellranger_version="cellranger"
    ;;
  d)cellranger_version="cellranger-dna"
    ;;
esac
#else
#  echo "Invalid cellranger option: $(echo $mkfastq)"
#  echo "Please provide either -ma, -mc, -md"
#  exit 1
fi

if [ ! -z ${mkfastq+x} ]; then
  bcl2fastq_command_line="$(echo "$cellranger_version" mkfastq) \
    --run $run_path \
    --csv $samplesheet_path \
    --output-dir $output_path \
    --id $flowcell_ts \
    $bclopts \
    &> $log_path" 
elif [ ! -z ${bcl2fastq410x+x} ]; then
  bcl2fastq_command_line="nohup bcl2fastq \
    -R "${run_path}" \
    --sample-sheet ${samplesheet_path} \
    -o "${output_path}" \
    -p "${proc_threads}" \
    -r "${read_threads}" \
    -w "${write_threads}" \
    --use-bases-mask=${basemask} \
    --create-fastq-for-index-reads \
    --minimum-trimmed-read-length=8 \
    --mask-short-adapter-reads=8 \
    --ignore-missing-positions \
    --ignore-missing-controls \
    --ignore-missing-filter \
    --ignore-missing-bcls \
    --interop-dir="${interop_path}" \
    "${bclopts}" \
    &> "${log_path}""
else 
  bcl2fastq_command_line="nohup bcl2fastq \
    -R $run_path \
    --sample-sheet $samplesheet_path \
    -o $output_path \
    -p $proc_threads \
    -r $read_threads \
    -w $write_threads\
    $bclopts \
    &> $log_path"
fi

echo $bcl2fastq_command_line
exit 0
